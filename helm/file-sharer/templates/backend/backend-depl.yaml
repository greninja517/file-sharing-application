apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.backend.depl_name }}
  namespace: {{ .Release.Namespace }}
spec:
  replicas: {{ .Values.backend.replicas }}
  selector:
    matchLabels:
      app: backend-app
  template:
    metadata:
      labels:
        app: backend-app
    spec:
      containers:
      - name: backend
        image: {{ .Values.backend.image.repository }}:{{ .Values.backend.image.tag }}
        resources:
          limits:
            memory: "512Mi"
            cpu: "500m"
        ports:
        - containerPort: 9090
        env:
          - name: DB_USERNAME
            value: {{ required "database username is required. Use --set database.root_user=<username>" .Values.database.root_user }}
            # valueFrom:
            #   secretKeyRef:
            #     name: backend-secret
            #     key: db_username
          - name: DB_PASSWORD
            value: {{ required "database password is required. Use --set database.root_password=<password>" .Values.database.root_password }}
            # valueFrom:
            #   secretKeyRef:
            #     name: backend-secret
            #     key: db_password
          - name: DB_URL
            valueFrom:
              configMapKeyRef:
                name: backend-cfg
                key: database_url
          - name: FILE_STORAGE_DIRECTORY
            value: {{ .Values.backend.file_storage_dir }}
        volumeMounts:
        - name: backend-vol
          mountPath: {{ .Values.backend.file_storage_dir }}
      volumes: 
        - name: backend-vol
          persistentVolumeClaim:
            claimName: backend-pvc
        

            
 